apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: webservice
  namespace: argocd
  finalizers:
    - resources-finalizers.argocd.argoproj.io
spec:
  project: hankeln
  revisionHistoryLimit: 1
  destination:
    name: in-cluster
    namespace: webservice
  syncPolicy:
    automated:
      prune: true
      allowEmpty: true
  source:
    repoURL: https://kube-the-home.github.io/generic-helm/
    targetRevision: 2.0.0
    chart: generic
    helm:
      valuesObject:
        image:
          registry: docker-registry.hankeln.work
          repository: webservice/server
          tag: 3.17.4 # datasource=docker depName=docker-registry.hankeln.work/webservice/server versioning=docker
        application:
          port: 5090
          additionalLabels:
            network-policy/deny-all: "true"
            network-policy/egress-dns: "true"
            network-policy/egress-world: "true"
            network-policy/egress-otel: "true"
            network-policy/egress-postgres: "true"
            network-policy/ingess-nginx-port: "5090"
        resources:
          requests:
            memory: "250Mi"
            cpu: "100m"
          limits:
            memory: "350Mi"
            cpu: "200m"
        ingress:
          enabled: true
          host: web.hankeln.work
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-dns01-issuer
          tls:
            - hosts:
                - web.hankeln.work
              secretName: webservice-tls
        env:
          # DOTNET
          - name: DOTNET_gcServer
            value: "1"
          - name: DOTNET_GCHeapCount
            value: "c"
          - name: ASPNETCORE_HTTP_PORTS
            value: "5090"
          # LOGGING
          - name: Logging__LogLevel__Default
            value: "Debug"
          - name: Logging__LogLevel__Microsoft.AspNetCore
            value: "Warning"
          # OTEL
          - name: OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES
            value: "true"
          - name: OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES
            value: "true"
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://aspire-dashboard-otlp-clusterip.aspire-dashboard.svc.cluster.local:8080"
          - name: OTEL_SERVICE_NAME
            value: "prod:WebService.Server"
          - name: OTEL_EXPORTER_OTLP_HEADERS
            value: "x-otlp-api-key=aspire"
          # Obsidian
          - name: OBSIDIAN_PATH
            value: /vault  # can be overridden
          # Postgres
          - name: ConnectionStrings__WebService
            valueFrom:
              secretKeyRef:
                name: postgres-connection
                key: PostgresConnectionString
        securityContext:
          container:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
        volumeMounts:
          - name: obsidian
            mountPath: /vault
        volumes:
          - name: obsidian
            emptyDir: {}
        initContainers:
          - name: migrations
            image: docker-registry.hankeln.work/webservice/migrations:3.17.4 # renovate
            env:
              # OTEL
              - name: OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES
                value: "true"
              - name: OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES
                value: "true"
              - name: OTEL_EXPORTER_OTLP_ENDPOINT
                value: "http://aspire-dashboard-otlp-clusterip.aspire-dashboard.svc.cluster.local:8080"
              - name: OTEL_SERVICE_NAME
                value: "prod:WebService.Migrations"
              - name: OTEL_EXPORTER_OTLP_HEADERS
                value: "x-otlp-api-key=aspire"
              # postgres
              - name: ConnectionStrings__WebService
                valueFrom:
                  secretKeyRef:
                    name: postgres-connection
                    key: PostgresConnectionString
          - name: obsidian-sync
            image: alpine/git:v2.49.1 # renovate
            restartPolicy: Always
            env:
              - name: GIT_URL
                valueFrom:
                  secretKeyRef:
                    name: git-credentials
                    key: GIT_URL
              - name: GIT_USER
                valueFrom:
                  secretKeyRef:
                    name: git-credentials
                    key: GIT_USER
              - name: GIT_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: git-credentials
                    key: GIT_TOKEN
              - name: OBSIDIAN_PATH
                value: /vault  # can be overridden
              - name: PULL_INTERVAL
                value: "900"  # seconds, 900 = 15 minutes
            volumeMounts:
              - name: obsidian
                mountPath: /vault
            command:
              - /bin/sh
              - -c
              - |
                set -eux

                if [ -z "$(ls -A ${OBSIDIAN_PATH})" ]; then
                  echo "[INFO] Directory is empty. Cloning repository..."
                  git clone https://${GIT_USER}:${GIT_TOKEN}@${GIT_URL} ${OBSIDIAN_PATH}
                  echo "[INFO] Clone completed."
                else
                  echo "[WARN] Directory not empty. Skipping clone."
                fi

                cd ${OBSIDIAN_PATH}
                while true; do
                  echo "[INFO] Pulling changes from remote repository..."
                  git pull
                  echo "[INFO] Pull completed. Sleeping for ${PULL_INTERVAL} seconds..."
                  sleep ${PULL_INTERVAL}
                done
