---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: paperless
  namespace: argocd
spec:
  destination:
    namespace: paperless
    name: in-cluster
  project: hankeln
  syncPolicy:
    automated:
      prune: true
      selfHeal: false
  source:
    repoURL: https://zekker6.github.io/helm-charts
    targetRevision: 9.54.0
    chart: paperless
    helm:
      values: |

        image:
          tag: 2.11.0 # renovate datasource=docker depName=ghcr.io/paperless-ngx/paperless-ngx versioning=docker
        env:
          TZ: "Europe/Berlin"
          PAPERLESS_REDIS: "redis://paperless-redis-master.paperless.svc:6379"
          PAPERLESS_ADMIN_USER: "Lukas"
          PAPERLESS_ADMIN_MAIL: "noreply@hankeln.work"
          PAPERLESS_ADMIN_PASSWORD: "changeme"
          PAPERLESS_OCR_LANGUAGE: deu
        persistence:
          data:
            enabled: true
            size: 1Gi
            accessMode: ReadWriteOnce
          media:
            enabled: true
            size: 1Gi
            accessMode: ReadWriteOnce
          export:
            enabled: true
            size: 1Gi
            accessMode: ReadWriteOnce
          consume:
            enabled: true
            size: 1Gi
            accessMode: ReadWriteOnce
        ingress:
          main:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-dns01-issuer
              nginx.ingress.kubernetes.io/client-body-buffer-size: 50m
              nginx.ingress.kubernetes.io/proxy-body-size: 50m
            hosts:
              - host: documents.hankeln.work
                paths:
                  - path: /
                    pathType: Prefix
                    service:
                      name: paperless
                      port: 8000
            tls:
              - secretName: paperless-cert
                hosts:
                  - documents.hankeln.work
        redis:
          enabled: true
          architecture: replication
          replica:
            replicaCount: 1
